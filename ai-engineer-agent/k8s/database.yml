# AI Engineer Agent - Database StatefulSets
# PostgreSQL and TimescaleDB configurations

apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  labels:
    app: ai-engineer-agent
    component: database
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: fast-ssd
  hostPath:
    path: /data/postgres

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  labels:
    app: ai-engineer-agent
    component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  labels:
    app: ai-engineer-agent
    component: database
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: ai-engineer-agent
      component: database
  template:
    metadata:
      labels:
        app: ai-engineer-agent
        component: database
    spec:
      containers:
      - name: postgresql
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: postgres-db
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: postgres-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: postgres-config
        configMap:
          name: postgres-config

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: ai-engineer-agent
    component: database
spec:
  selector:
    app: ai-engineer-agent
    component: database
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP

---
# TimescaleDB for Analytics
apiVersion: v1
kind: PersistentVolume
metadata:
  name: timescale-pv
  labels:
    app: ai-engineer-agent
    component: analytics
spec:
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: fast-ssd
  hostPath:
    path: /data/timescale

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: timescale-pvc
  labels:
    app: ai-engineer-agent
    component: analytics
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: timescaledb
  labels:
    app: ai-engineer-agent
    component: analytics
spec:
  serviceName: timescaledb
  replicas: 1
  selector:
    matchLabels:
      app: ai-engineer-agent
      component: analytics
  template:
    metadata:
      labels:
        app: ai-engineer-agent
        component: analytics
    spec:
      containers:
      - name: timescaledb
        image: timescale/timescaledb:latest-pg15
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: timescale-db
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: timescale-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: timescale-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: timescale-storage
          mountPath: /var/lib/postgresql/data
        - name: timescale-config
          mountPath: /etc/postgresql
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: timescale-storage
        persistentVolumeClaim:
          claimName: timescale-pvc
      - name: timescale-config
        configMap:
          name: timescaledb-config

---
apiVersion: v1
kind: Service
metadata:
  name: timescaledb
  labels:
    app: ai-engineer-agent
    component: analytics
spec:
  selector:
    app: ai-engineer-agent
    component: analytics
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
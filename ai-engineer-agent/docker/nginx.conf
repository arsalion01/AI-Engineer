# AI Engineer Agent - Production Nginx Configuration
# High-performance reverse proxy with load balancing and SSL termination

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance Optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip Configuration
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=uploads:10m rate=2r/s;

    # Connection Limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Upstream Configuration for Main Application
    upstream ai_engineer_app {
        least_conn;
        server ai-engineer-app:3000 max_fails=3 fail_timeout=30s;
        # Add more app instances as needed for horizontal scaling
        # server ai-engineer-app-2:3000 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }

    # Upstream Configuration for WebSocket Server
    upstream websocket_server {
        ip_hash; # Sticky sessions for WebSocket connections
        server websocket-server:8080 max_fails=3 fail_timeout=30s;
        
        keepalive 16;
    }

    # Security Headers Map
    map $sent_http_content_type $csp_header {
        ~*text/html "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://accounts.google.com https://apis.google.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss: https://api.gemini.com https://accounts.google.com; frame-src https://accounts.google.com;";
        default "";
    }

    # ============================================================================
    # HTTP to HTTPS Redirect
    # ============================================================================
    server {
        listen 80;
        server_name _;
        
        # ACME Challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ============================================================================
    # HTTPS Main Application Server
    # ============================================================================
    server {
        listen 443 ssl http2;
        server_name your-domain.com www.your-domain.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

        # SSL Security Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;

        # HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy $csp_header always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

        # Connection Limiting
        limit_conn conn_limit_per_ip 20;

        # Client Configuration
        client_max_body_size 50M;
        client_body_timeout 60s;
        client_header_timeout 60s;

        # Root and Index
        root /usr/share/nginx/html;
        index index.html;

        # ================================================================
        # Main Application Routes
        # ================================================================
        location / {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://ai_engineer_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
            proxy_buffering off;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # ================================================================
        # API Routes with Enhanced Rate Limiting
        # ================================================================
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://ai_engineer_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API-specific timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 120s; # Longer for AI processing
        }

        # ================================================================
        # Authentication Routes with Strict Rate Limiting
        # ================================================================
        location ~ ^/(auth|login|register|oauth) {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://ai_engineer_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Enhanced security headers for auth
            add_header X-Frame-Options "DENY" always;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }

        # ================================================================
        # WebSocket Routes for Real-time Features
        # ================================================================
        location /ws/ {
            proxy_pass http://websocket_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific settings
            proxy_read_timeout 86400; # 24 hours
            proxy_send_timeout 86400;
            proxy_connect_timeout 10s;
        }

        # ================================================================
        # File Upload Routes with Size Limits
        # ================================================================
        location /api/upload {
            limit_req zone=uploads burst=3 nodelay;
            
            client_max_body_size 50M;
            client_body_timeout 300s;
            
            proxy_pass http://ai_engineer_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for large uploads
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # ================================================================
        # Static Assets with Aggressive Caching
        # ================================================================
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff" always;
            
            proxy_pass http://ai_engineer_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_cache_valid 200 1y;
        }

        # ================================================================
        # Health Check Endpoint
        # ================================================================
        location /health {
            access_log off;
            
            proxy_pass http://ai_engineer_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # ================================================================
        # Security: Block Access to Sensitive Files
        # ================================================================
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(sql|env|config|log)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # ================================================================
        # Error Pages
        # ================================================================
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # ============================================================================
    # Monitoring and Admin Interfaces (Internal Access Only)
    # ============================================================================
    
    # Grafana Dashboard
    server {
        listen 443 ssl http2;
        server_name grafana.your-domain.com;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # Restrict access to internal IPs only
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;

        location / {
            proxy_pass http://grafana:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Kibana Dashboard
    server {
        listen 443 ssl http2;
        server_name kibana.your-domain.com;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # Restrict access to internal IPs only
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;

        location / {
            proxy_pass http://kibana:5601;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}